services:
  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tharaga
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  saas:
    build: ./saas-server
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://postgres:postgres@db:5432/tharaga
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      RAZORPAY_KEY_ID: ${RAZORPAY_KEY_ID:-}
      RAZORPAY_KEY_SECRET: ${RAZORPAY_KEY_SECRET:-}
      RAZORPAY_WEBHOOK_SECRET: ${RAZORPAY_WEBHOOK_SECRET:-}
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "node -e \"fetch('http://localhost:4000/api/health').then(r=>process.exit(r.ok?0:1)).catch(()=>process.exit(1))\""]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    restart: unless-stopped
  app:
    working_dir: /app/app
    build:
      context: ./app
      dockerfile: Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:4000
    ports:
      - "3000:3000"
    depends_on:
      saas:
        condition: service_healthy
    restart: unless-stopped
volumes:
  dbdata: {}
